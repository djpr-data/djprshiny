% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/djpr_shiny_plot.R
\name{djpr_plot_server}
\alias{djpr_plot_server}
\title{Shiny module to create DJPR plot environment.}
\usage{
djpr_plot_server(
  id,
  plot_function,
  data,
  plt_change,
  date_slider = TRUE,
  date_slider_value_min = NULL,
  check_box_options = NULL,
  check_box_selected = check_box_options,
  check_box_var = series,
  download_button = TRUE,
  width_percent = 100,
  height_percent = 100,
  interactive = TRUE,
  convert_lazy = TRUE,
  ...
)
}
\arguments{
\item{id}{a Shiny \code{outputId} specific to the individual plot.}

\item{plot_function}{A function (without \verb{()}) that creates a ggplot2
object. Function must contain a \code{data} argument that takes a data.frame.}

\item{data}{data frame containing data to visualise}

\item{plt_change}{This should be: \code{reactive(input$plt_change)}. Note that
this reactive is created by \code{ggiraph_js()} which is called by
\code{djpr_tab_panel()}. \code{djpr_plot_server()} should only be called in apps that
feature a \code{djpr_tab_panel()}.}

\item{date_slider}{Logical; \code{TRUE} if you want a date slider to be shown.
If \code{TRUE}, your data must contain a \code{date} column.}

\item{date_slider_value_min}{\code{NULL} by default. Specify a date to modify the
first (minimum) selected date in the date slider. A date slider (if present)
will have two selected values, corresponding to the start and end of the date
range to be visualised. By default, these values are the minimum and
maximum of the \code{date} columns of \code{data}. Supplying a non-\code{NULL} value to this
argument overrides the minimum value.}

\item{check_box_options}{A character vector containing values to include
in a check box. \code{NULL} by default, which suppresses the check box.}

\item{check_box_selected}{A character vector containing values of the check
box that should be selected by default.}

\item{check_box_var}{name of column in \code{data} that contains the levels
included in \code{check_box_options}. \code{series} by default.}

\item{download_button}{logical; \code{TRUE} by default. When \code{TRUE}, a download
button is displayed.}

\item{width_percent}{Width of plot object, as a percentage of the standard}

\item{height_percent}{Height of plot object, as a percentage of the standard}

\item{interactive}{logical; \code{TRUE} by default. When \code{TRUE}, plot will be
rendered as an interactive \code{ggiraph} object; when \code{FALSE} a static ggplot
will be rendered.}

\item{convert_lazy}{logical; \code{TRUE} by default. When \code{TRUE}, lazy data will be
converted so that a data.frame is passed to plot functions.}

\item{...}{arguments passed to \code{plot_function}}
}
\description{
Server-side companion to \code{djpr_plot_ui()}.
}
\examples{
\dontrun{

library(shiny)
library(ggplot2)

ui <- djpr_page(
  title = "My dashboard",
  djpr_tab_panel(
    title = "First tab",
    djpr_plot_ui("plot")
  )
)

plot_function <- function(data = economics,
                          title = "This is a title",
                          subtitle = "This is a subtitle",
                          caption = "This data comes from the ggplot2 package") {
  data \%>\%
    ggplot(aes(x = date, y = unemploy)) +
    geom_line() +
    labs(
      title = title,
      subtitle = subtitle,
      caption = caption
    ) +
    theme_minimal(base_size = 14)
}

server <- function(input, output, session) {
  djpr_plot_server("plot",
    plot_function,
    date_slider = TRUE,
    data = ggplot2::economics,
    plt_change = reactive(input$plt_change)
  )
}

shinyApp(ui, server)
}

}
